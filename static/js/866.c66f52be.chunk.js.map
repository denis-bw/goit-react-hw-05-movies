{"version":3,"file":"static/js/866.c66f52be.chunk.js","mappings":"8MAEaA,EAAgB,mCAAG,WAAOC,GAAP,iFAGfC,EAAAA,EAAAA,IAAUD,GAAKE,MAAK,SAAAC,GACzB,OAAOA,CACV,IAAEC,OAAM,SAAAC,GACL,MAAM,IAAIC,MAAMD,EACnB,IAPuB,mFAAH,qD,2GCD7B,EAAoC,mCAApC,EAAuF,+BAAvF,EAAqI,8B,SCsCrI,EAjCgB,WAAO,IAAD,EAEdE,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAGMC,EAAiB,6CAAyCL,EAAzC,4BADP,mCACO,mBAUnB,OAPAM,EAAAA,EAAAA,YAAU,YACNd,EAAAA,EAAAA,GAAiBa,GAAmBV,MAAK,SAACY,GAC1C,OAAOH,EAAWG,EAAUC,KAC/B,GACA,GAAC,CAACH,KAIC,SAAC,EAAAI,SAAD,CAAUC,UAAU,wCAApB,UACI,gBAAIC,UAAWC,EAAf,UACKT,IAAO,UAAIA,EAAQU,eAAZ,aAAI,EAAiBC,KAAI,SAAAC,GAEjC,OAAO,2BACH,eAAIJ,UAAWC,EAAf,SAAmCG,EAAOC,UACtC,cAAGL,UAAWC,EAAd,SAAiCG,EAAOE,YAFhCF,EAAOG,GAItB,KAE4B,KAArB,OAAPf,QAAO,IAAPA,OAAA,EAAAA,EAASU,QAAQM,UAAgB,cAAGR,UAAWC,EAAd,2DAIjD,C","sources":["API/Api.js","webpack://goit-react-hw-05-movies/./src/pages/Reviews/Reviews.module.css?9a3e","pages/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nexport const ApiServerRequest = async (url) => {\n\n   \n    return await axios.get(url).then(response => {\n            return response;\n        }).catch(error => {\n            throw new Error(error);\n        })\n\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"Reviews_Container\":\"Reviews_Reviews_Container__UWQek\",\"Title_Reviews\":\"Reviews_Title_Reviews__c2WY9\",\"Text_Reviews\":\"Reviews_Text_Reviews__hdiBa\"};","import { useParams } from \"react-router-dom\";\nimport { useEffect, useState } from 'react';\nimport { ApiServerRequest } from '../../API/Api'\nimport css from './Reviews.module.css'\nimport { Suspense } from \"react\";\n\nconst Reviews = () => {\n\nconst { movieId } = useParams();\nconst [reviews, setReviews] = useState(null);\n\nconst API_KEY = '78fa60d71c65cdb8379688d13cf3e503';\nconst URL_MOVIE_REVIEWS = `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`;\n\n\n    useEffect(() => {\n        ApiServerRequest(URL_MOVIE_REVIEWS).then((dataMovie) => {\n        return setReviews(dataMovie.data)\n    });\n    },[URL_MOVIE_REVIEWS])\n\n    \n    return (\n        <Suspense fallback={<div>Loading...</div>}>\n            <ul className={css.Reviews_Container}>\n                {reviews && reviews.results?.map(review => {\n                \n                return <li key={review.id}>\n                    <h2 className={css.Title_Reviews}>{review.author }</h2>\n                        <p className={css.Text_Reviews}>{review.content }</p>\n                    </li>\n                })}\n                \n                {reviews?.results.length === 0 && <p className={css.Text_Reviews}>We don`t have any reviews for this movie.</p>}\n                </ul>\n        </Suspense>\n    );\n};\n\nexport default Reviews"],"names":["ApiServerRequest","url","axios","then","response","catch","error","Error","movieId","useParams","useState","reviews","setReviews","URL_MOVIE_REVIEWS","useEffect","dataMovie","data","Suspense","fallback","className","css","results","map","review","author","content","id","length"],"sourceRoot":""}