{"version":3,"file":"static/js/459.e9d79f60.chunk.js","mappings":"8MAEaA,EAAgB,mCAAG,WAAOC,GAAP,iFAGfC,EAAAA,EAAAA,IAAUD,GAAKE,MAAK,SAAAC,GACzB,OAAOA,CACV,IAAEC,OAAM,SAAAC,GACL,MAAM,IAAIC,MAAMD,EACnB,IAPuB,mFAAH,qD,2GCD7B,EAA4B,wBAA5B,EAAgE,wBAAhE,EAAqG,yBAArG,EAAgJ,8B,SC4ChJ,EAvCa,WAAO,IAAD,EAEPE,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KAGMC,EAAc,6CAAyCL,EAAzC,4BADJ,mCACI,mBAWpB,OARAM,EAAAA,EAAAA,YAAU,YACNd,EAAAA,EAAAA,GAAiBa,GAAgBV,MAAK,SAACY,GACvC,OAAOH,EAASG,EAAUC,KACzB,GACJ,GAAC,CAACH,KAKC,SAAC,EAAAI,SAAD,CAAUC,UAAU,wCAApB,UACI,gBAAIC,UAAWC,EAAf,UACKT,IAAK,UAAIA,EAAMU,YAAV,aAAI,EAAYC,KAAI,SAAAC,GAE1B,IAAIC,EAAQ,yCAAqCD,EAAME,cAKvD,OAJ0B,OAAvBF,EAAME,eACLD,EAAW,+EAGR,gBAAIL,UAAWC,EAAf,WACC,gBAAKD,UAAWC,EAAgBM,IAAKF,EAAUG,IAAKJ,EAAMK,QAC1D,cAAGT,UAAWC,EAAd,SAAoCG,EAAMK,SAFRL,EAAMM,GAI/C,KAEmB,KAAlB,OAALlB,QAAK,IAALA,OAAA,EAAAA,EAAOU,KAAKS,UAAgB,cAAGC,SAAUX,EAAb,6CAIxC,C","sources":["API/Api.js","webpack://goit-react-hw-05-movies/./src/pages/Cast/Cast.module.css?cfbb","pages/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nexport const ApiServerRequest = async (url) => {\n\n   \n    return await axios.get(url).then(response => {\n            return response;\n        }).catch(error => {\n            throw new Error(error);\n        })\n\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"List_Cast\":\"Cast_List_Cast__OoP49\",\"Cast_Item\":\"Cast_Cast_Item__5tPZl\",\"Cast_Image\":\"Cast_Cast_Image__HaQmq\",\"Name_Actor_Text\":\"Cast_Name_Actor_Text__fRVpE\"};","import { useParams } from \"react-router-dom\";\nimport { useEffect, useState } from 'react';\nimport { ApiServerRequest } from '../../API/Api'\nimport { Suspense } from \"react\";\nimport css from './Cast.module.css'\n\nconst Cast = () => {\n\n    const { movieId } = useParams();\n    const [movie, setMovie] = useState(null);\n\n    const API_KEY = '78fa60d71c65cdb8379688d13cf3e503';\n    const URL_MOVIE_CAST = `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`;\n\n\n    useEffect(() => {\n        ApiServerRequest(URL_MOVIE_CAST).then((dataMovie) => {\n        return setMovie(dataMovie.data)\n        });\n    },[URL_MOVIE_CAST])\n\n   \n    \n    return (\n        <Suspense fallback={<div>Loading...</div>}>\n            <ul className={css.List_Cast}>\n                {movie && movie.cast?.map(actor => {\n\n                let imgActor = `https://image.tmdb.org/t/p/w500${actor.profile_path}`\n                if(actor.profile_path === null){\n                    imgActor = 'https://upload.wikimedia.org/wikipedia/commons/1/14/No_Image_Available.jpg'\n                }\n               \n                return <li className={css.Cast_Item} key={actor.id}>\n                        <img className={css.Cast_Image} src={imgActor} alt={actor.name} />\n                        <p className={css.Name_Actor_Text}>{actor.name}</p>\n                    </li> \n                })}\n\n            {movie?.cast.length === 0 && <p lassName={css.Name_Actor_Text} >No information about actors</p>}\n            </ul>\n        </Suspense>\n    );\n};\n\nexport default Cast"],"names":["ApiServerRequest","url","axios","then","response","catch","error","Error","movieId","useParams","useState","movie","setMovie","URL_MOVIE_CAST","useEffect","dataMovie","data","Suspense","fallback","className","css","cast","map","actor","imgActor","profile_path","src","alt","name","id","length","lassName"],"sourceRoot":""}