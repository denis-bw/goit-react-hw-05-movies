{"version":3,"file":"static/js/958.d02af196.chunk.js","mappings":"mOACA,GAAgB,YAAc,kCAAkC,sBAAwB,4CAA4C,wBAA0B,8CAA8C,aAAe,mCAAmC,YAAc,kCAAkC,4BAA8B,kDAAkD,WAAa,iCAAiC,iBAAmB,uCAAuC,wBAA0B,8CAA8C,aAAe,oC,SCyD7jB,EAnDqB,WAAO,IAAD,EACfA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAsCF,EAAAA,EAAAA,UAAS,IAA/C,eAAOG,EAAP,KAAoBC,EAApB,KAGMC,EAAS,6CAAyCP,EAAzC,oBADC,mCACD,mBAGTQ,GAAWC,EAAAA,EAAAA,MAgBjB,OAfAC,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,GAAiBJ,GAAWK,MAAK,SAACC,GAElC,OADIP,EAAe,kCAAD,OAAmCO,EAAUC,KAAKC,cAC7DX,EAASS,EAAUC,KAC7B,GACA,GAAC,CAACP,IAIiB,wCAAhBF,GACAC,EAAe,+EAMf,UAAC,EAAAU,SAAD,CAAUC,UAAU,wCAApB,WACE,gBAAKC,UAAWC,EAAAA,sBAAhB,UAA2C,SAAC,KAAD,CAAMD,UAAWC,EAAAA,YAAiBC,GAAIZ,EAASa,MAA/C,oBAExClB,IAAS,iBAAKe,UAAWC,EAAAA,wBAAhB,WACN,gBAAKD,UAAWC,EAAAA,aAAkBG,IAAKjB,EAAakB,IAAKpB,EAAMqB,kBAC/D,iBAAKN,UAAWC,EAAAA,4BAAhB,WACI,gBAAID,UAAWC,EAAAA,YAAf,UAAiChB,EAAMqB,eAAvC,KAAyDrB,EAAMsB,aAAaC,MAAM,EAAG,GAArF,QACA,eAAGR,UAAWC,EAAAA,WAAd,yBAA2CQ,KAAKC,MAAMzB,EAAM0B,YAA5D,QACA,eAAIX,UAAWC,EAAAA,iBAAf,uBACA,cAAGD,UAAWC,EAAAA,WAAd,SAA+BhB,EAAM2B,YACrC,eAAIZ,UAAWC,EAAAA,iBAAf,qBACA,cAAGD,UAAWC,EAAAA,WAAd,mBAA+BhB,EAAM4B,cAArC,aAA+B,EAAcC,KAAI,SAAAC,GAAE,OAAIA,EAAGC,IAAP,IAAaC,KAAK,aAI5EhC,IAAS,oDACV,gBAAIe,UAAWC,EAAAA,wBAAf,WACI,eAAID,UAAWC,EAAAA,uBAAf,UAA2C,SAAC,KAAD,CAAMD,UAAWC,EAAAA,aAAkBE,MAAOb,EAAUY,GAAE,kBAAapB,EAAb,SAAtD,qBAC3C,eAAIkB,UAAWC,EAAAA,uBAAf,UAA2C,SAAC,KAAD,CAAMD,UAAWC,EAAAA,aAAkBE,MAAOb,EAAUY,GAAE,kBAAapB,EAAb,YAAtD,2BAElD,SAAC,KAAD,MAGR,C","sources":["webpack://goit-react-hw-05-movies/./src/components/pages/MovieDetails/MovieDetails.module.css?1b37","components/pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"Button_Back\":\"MovieDetails_Button_Back__rr03a\",\"Button_Back_Container\":\"MovieDetails_Button_Back_Container__JGUFM\",\"Container_Movie_Content\":\"MovieDetails_Container_Movie_Content__EGoKk\",\"Movie_Poster\":\"MovieDetails_Movie_Poster__zS47Q\",\"Title_Movie\":\"MovieDetails_Title_Movie__X3PF2\",\"Information_Movie_Container\":\"MovieDetails_Information_Movie_Container__pqMM0\",\"Text_Movie\":\"MovieDetails_Text_Movie__NaitN\",\"Text_Movie_Title\":\"MovieDetails_Text_Movie_Title__bTMRS\",\"List_Link_Details_Movie\":\"MovieDetails_List_Link_Details_Movie__AUmoe\",\"Link_Details\":\"MovieDetails_Link_Details__aZABt\"};","import { useLocation, useParams } from \"react-router-dom\";\nimport {ApiServerRequest} from '../../../API/Api'\nimport { useEffect, useState } from 'react';\nimport { Outlet, Link } from \"react-router-dom\"\nimport { Suspense } from \"react\";\nimport css from './MovieDetails.module.css'\n\nconst MovieDetails = () => {\n    const { movieId } = useParams();\n    const [movie, setMovie] = useState(null);\n    const [moviePoster, setMoviePoster] = useState('')\n\n    const API_KEY = '78fa60d71c65cdb8379688d13cf3e503';\n    const URL_MOVIE = `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`;\n\n\n    const location = useLocation()\n    useEffect(() => {\n        ApiServerRequest(URL_MOVIE).then((dataMovie) => {\n            setMoviePoster(`https://image.tmdb.org/t/p/w500${dataMovie.data.poster_path}`)\n        return setMovie(dataMovie.data)\n    });\n    },[URL_MOVIE])\n    \n    \n    \n    if (moviePoster === 'https://image.tmdb.org/t/p/w500null') {\n        setMoviePoster('https://upload.wikimedia.org/wikipedia/commons/1/14/No_Image_Available.jpg')\n    }\n   \n\n    \n    return (    \n        <Suspense fallback={<div>Loading...</div>}>      \n          <div className={css.Button_Back_Container}><Link className={css.Button_Back} to={location.state }>Back</Link></div>\n          \n            {movie && <div className={css.Container_Movie_Content}>\n                <img className={css.Movie_Poster} src={moviePoster} alt={movie.original_title} />\n                <div className={css.Information_Movie_Container}>\n                    <h1 className={css.Title_Movie}>{movie.original_title} ({movie.release_date.slice(0, 4)})</h1>\n                    <p className={css.Text_Movie}>User Score: {Math.round(movie.popularity)}%</p>\n                    <h2 className={css.Text_Movie_Title}>Overviwe</h2>\n                    <p className={css.Text_Movie}>{movie.overview}</p>\n                    <h2 className={css.Text_Movie_Title}>Genres</h2>\n                    <p className={css.Text_Movie}>{movie.genres?.map(el => el.name).join(' ')}</p>\n                </div>\n            </div>}\n            \n            {movie && <p>Additional information</p> &&\n            <ul className={css.List_Link_Details_Movie}>\n                <li className={css.Container_Link_Details}><Link className={css.Link_Details} state={location} to={`/movies/${movieId}/cast`}>Cast</Link></li>\n                <li className={css.Container_Link_Details}><Link className={css.Link_Details} state={location} to={`/movies/${movieId}/reviews`}>Reviews</Link></li>\n            </ul>   }\n         <Outlet />\n    </Suspense>\n  );\n};\n\nexport default MovieDetails"],"names":["movieId","useParams","useState","movie","setMovie","moviePoster","setMoviePoster","URL_MOVIE","location","useLocation","useEffect","ApiServerRequest","then","dataMovie","data","poster_path","Suspense","fallback","className","css","to","state","src","alt","original_title","release_date","slice","Math","round","popularity","overview","genres","map","el","name","join"],"sourceRoot":""}