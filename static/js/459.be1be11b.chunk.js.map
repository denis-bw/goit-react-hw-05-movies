{"version":3,"file":"static/js/459.be1be11b.chunk.js","mappings":"8MAEaA,EAAgB,mCAAG,WAAOC,GAAP,iFAGfC,EAAAA,EAAAA,IAAUD,GAAKE,MAAK,SAAAC,GACzB,OAAOA,CACV,IAAEC,OAAM,SAAAC,GACL,MAAM,IAAIC,MAAMD,EACnB,IAPuB,mFAAH,qD,qDCD7B,MAAkC,+BAAlC,EAA8E,0B,SCCjEC,EAAQ,WACjB,OAAO,gBAAKC,UAAWC,EAAhB,UACH,cAAGD,UAAWC,EAAd,SAA8B,2BAErC,C,mECLD,EAAkC,gC,SCErBC,EAAS,WAClB,OAAO,SAAC,KAAD,CACKC,OAAO,OACPC,MAAM,MACNC,MAAM,mBACNC,UAAU,oBACVC,OAAO,IACPC,aAAc,CAAC,EACfC,aAAcR,EACdS,SAAS,GAExB,C,4HCbD,EAA4B,wBAA5B,EAAgE,wBAAhE,EAAqG,yBAArG,EAAgJ,8B,SC2DhJ,EAlDa,WAAO,IAAD,EAEPC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,WAAS,GAAnC,eAAOf,EAAP,KAAcoB,EAAd,KAGMC,EAAc,6CAAyCR,EAAzC,4BADJ,mCACI,mBAgBpB,OAbAS,EAAAA,EAAAA,YAAU,WACNH,GAAa,IAEbzB,EAAAA,EAAAA,GAAiB2B,GAAgBxB,MAAK,SAAC0B,GACnC,OAAON,EAASM,EAAUC,KAC7B,IAAEzB,OAAM,SAAAC,GAEP,MADEoB,GAAS,GACL,IAAInB,EAAAA,EAAMD,EACjB,IAAEyB,QAAQN,GAAa,GAC3B,GAAC,CAACE,KAKC,UAAC,EAAAK,SAAD,CAAUC,UAAU,SAACvB,EAAA,EAAD,IAApB,UAEKc,IAAa,SAACd,EAAA,EAAD,IACbJ,IAAS,SAACC,EAAA,EAAD,KAEV,gBAAIC,UAAWC,EAAf,UACKa,IAAK,UAAIA,EAAMY,YAAV,aAAI,EAAYC,KAAI,SAAAC,GAE1B,IAAIC,EAAQ,yCAAqCD,EAAME,cAKvD,OAJ0B,OAAvBF,EAAME,eACLD,EAAW,+EAGR,gBAAI7B,UAAWC,EAAf,WACC,gBAAKD,UAAWC,EAAgB8B,IAAKF,EAAUG,IAAKJ,EAAMK,QAC1D,cAAGjC,UAAWC,EAAd,SAAoC2B,EAAMK,SAFRL,EAAMM,GAI/C,KAEmB,KAAlB,OAALpB,QAAK,IAALA,OAAA,EAAAA,EAAOY,KAAKS,UAAgB,cAAGC,SAAUnC,EAAb,SAAmC,qCAI3E,C","sources":["API/Api.js","webpack://goit-react-hw-05-movies/./src/components/Error/Error.module.css?141d","components/Error/Error.jsx","webpack://goit-react-hw-05-movies/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","webpack://goit-react-hw-05-movies/./src/pages/Cast/Cast.module.css?cfbb","pages/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nexport const ApiServerRequest = async (url) => {\n\n   \n    return await axios.get(url).then(response => {\n            return response;\n        }).catch(error => {\n            throw new Error(error);\n        })\n\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"Error_Container\":\"Error_Error_Container__fHvsy\",\"Error_Text\":\"Error_Error_Text__rVPJX\"};","import css from './Error.module.css'\n\nexport const Error = () => {\n    return <div className={css.Error_Container}>\n        <p className={css.Error_Text}>An error has occurred</p>\n    </div>\n}","// extracted by mini-css-extract-plugin\nexport default {\"SpinerContainer\":\"Loader_SpinerContainer__XEAxf\"};","import { TailSpin } from 'react-loader-spinner';\nimport css from './Loader.module.css'\n\nexport const Loader = () => {\n    return <TailSpin\n                height=\"100%\"\n                width=\"20%\"\n                color=\"rgb(145, 44, 19)\"\n                ariaLabel=\"tail-spin-loading\"\n                radius=\"1\"\n                wrapperStyle={{}}\n                wrapperClass={css.SpinerContainer}\n                visible={true}\n            />   \n}","// extracted by mini-css-extract-plugin\nexport default {\"List_Cast\":\"Cast_List_Cast__OoP49\",\"Cast_Item\":\"Cast_Cast_Item__5tPZl\",\"Cast_Image\":\"Cast_Cast_Image__HaQmq\",\"Name_Actor_Text\":\"Cast_Name_Actor_Text__fRVpE\"};","import { useParams } from \"react-router-dom\";\nimport { useEffect, useState } from 'react';\nimport { ApiServerRequest } from '../../API/Api'\nimport { Loader } from \"components/Loader/Loader\";\nimport { Error } from \"components/Error/Error\";\nimport { Suspense } from \"react\";\nimport css from './Cast.module.css'\n\n\n\nconst Cast = () => {\n\n    const { movieId } = useParams();\n    const [movie, setMovie] = useState(null);\n    const [isLoading, setIsLoading] = useState(false)\n    const [error, setError] = useState(false)\n\n    const API_KEY = '78fa60d71c65cdb8379688d13cf3e503';\n    const URL_MOVIE_CAST = `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`;\n\n\n    useEffect(() => {\n        setIsLoading(true)\n\n        ApiServerRequest(URL_MOVIE_CAST).then((dataMovie) => {\n            return setMovie(dataMovie.data)\n        }).catch(error => {\n            setError(true)\n          throw new Error(error);\n        }).finally(setIsLoading(false));\n    },[URL_MOVIE_CAST])\n\n   \n    \n    return (\n        <Suspense fallback={<Loader />}>\n\n            {isLoading && <Loader />}\n            {error && <Error />}\n\n            <ul className={css.List_Cast}>\n                {movie && movie.cast?.map(actor => {\n\n                let imgActor = `https://image.tmdb.org/t/p/w500${actor.profile_path}`\n                if(actor.profile_path === null){\n                    imgActor = 'https://upload.wikimedia.org/wikipedia/commons/1/14/No_Image_Available.jpg'\n                }\n               \n                return <li className={css.Cast_Item} key={actor.id}>\n                        <img className={css.Cast_Image} src={imgActor} alt={actor.name} />\n                        <p className={css.Name_Actor_Text}>{actor.name}</p>\n                    </li> \n                })}\n\n            {movie?.cast.length === 0 && <p lassName={css.Name_Actor_Text} >No information about actors</p>}\n            </ul>\n        </Suspense>\n    );\n};\n\nexport default Cast"],"names":["ApiServerRequest","url","axios","then","response","catch","error","Error","className","css","Loader","height","width","color","ariaLabel","radius","wrapperStyle","wrapperClass","visible","movieId","useParams","useState","movie","setMovie","isLoading","setIsLoading","setError","URL_MOVIE_CAST","useEffect","dataMovie","data","finally","Suspense","fallback","cast","map","actor","imgActor","profile_path","src","alt","name","id","length","lassName"],"sourceRoot":""}